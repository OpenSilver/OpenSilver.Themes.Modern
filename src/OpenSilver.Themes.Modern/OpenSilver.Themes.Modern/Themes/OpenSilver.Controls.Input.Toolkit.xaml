<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=OpenSilver"
                    xmlns:inputToolkit="clr-namespace:System.Windows.Controls;assembly=OpenSilver.Controls.Input.Toolkit">

    <!-- ListTimePickerPopup Style -->
    <Style TargetType="inputToolkit:ListTimePickerPopup">
        <Setter Property="PopupMinutesInterval"
                Value="30" />
        <Setter Property="PopupSecondsInterval"
                Value="0" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:ListTimePickerPopup">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContainedByPickerStates">
                                <VisualState x:Name="Contained" />
                                <VisualState x:Name="NotContained" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PopupModeStates">
                                <VisualState x:Name="AllowSecondsAndDesignatorsSelection" />
                                <VisualState x:Name="AllowTimeDesignatorsSelection" />
                                <VisualState x:Name="AllowSecondsSelection" />
                                <VisualState x:Name="HoursAndMinutesOnly" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ListBox x:Name="ListBox"
                                 IsTabStop="True"
                                 TabIndex="1"
                                 MaxHeight="130"
                                 DisplayMemberPath="Key"
                                 DataContext="{TemplateBinding TimeItemsSelection}"
                                 ItemsSource="{Binding Items}"
                                 SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TimeUpDown-->
    <Style x:Name="FlatTimeStyle"
           TargetType="inputToolkit:TimeUpDown">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:TimeUpDown">
                    <Grid x:Name="Root"
                          TextOptions.TextHintingMode="Fixed">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation To=".5"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Root" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TimeHintStates">
                                <VisualState x:Name="TimeHintOpenedUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2"
                                                                  Value="-23"
                                                                  KeySpline="0,0,0,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2"
                                                                  Value="22"
                                                                  KeySpline="0,0,0,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimeHintOpenedDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2"
                                                                  Value="0"
                                                                  KeySpline="0,0,0,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2"
                                                                  Value="22"
                                                                  KeySpline="0,0,0,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimeHintClosed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:2"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2"
                                                                  Value="0"
                                                                  KeySpline="0,0,0,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="22" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2"
                                                                  Value="0"
                                                                  KeySpline="0,0,0,1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ParsingStates">
                                <VisualState x:Name="ValidTime" />
                                <VisualState x:Name="InvalidTime" />
                                <VisualState x:Name="EmptyTime" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Popup x:Name="TimeHintPopup"
                               IsOpen="True"
                               VerticalOffset="0">
                            <Border x:Name="TimeHintVisualElement"
                                    HorizontalAlignment="Stretch"
                                    IsHitTestVisible="True"
                                    Visibility="Collapsed"
                                    Background="Red"
                                    BorderBrush="Green"
                                    BorderThickness="1">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentControl Content="{TemplateBinding TimeHintContent}"
                                                    TextOptions.TextHintingMode="Fixed"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    Foreground="{DynamicResource Theme_BorderBrush}"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Margin="3"
                                                    IsTabStop="False"
                                                    IsHitTestVisible="False" />
                                </Grid>
                            </Border>
                        </Popup>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="17" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="Text"
                                     Text="{TemplateBinding Value}"
                                     TextWrapping="NoWrap"
                                     TextAlignment="Left"
                                     Background="{DynamicResource Theme_ControlBackgroundBrush}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     FontStretch="{TemplateBinding FontStretch}"
                                     FontStyle="{TemplateBinding FontStyle}"
                                     FontWeight="{TemplateBinding FontWeight}"
                                     Foreground="{TemplateBinding Foreground}"
                                     Padding="{TemplateBinding Padding}"
                                     Height="{TemplateBinding Height}"
                                     VerticalContentAlignment="Center"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     AcceptsReturn="False"
                                     Grid.ColumnSpan="2">

                            </TextBox>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource Theme_DisabledBrush}"
                                Opacity="0"
                                Margin="1,2"
                                IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TimePicker -->
    <Style x:Name="FlatTimePickerStyle"
           TargetType="inputToolkit:TimePicker">
        <Setter Property="Height"
                Value="32" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="MinWidth"
                Value="125" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,4,4,4" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="TimeUpDownStyle"
                Value="{StaticResource FlatTimeStyle}" />
        <Setter Property="PopupTemplate">
            <Setter.Value>
                <inputToolkit:TimePickerPopupTemplate>
                    <inputToolkit:ListTimePickerPopup />
                </inputToolkit:TimePickerPopupTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:TimePicker">
                    <Grid x:Name="RootElement">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <!-- common states -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDownToggle"
                               Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                          Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                            <!-- focus states -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!-- Popup states -->
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                      To="PopupOpened" />
                                    <VisualTransition GeneratedDuration="0:0:0.2"
                                                      To="PopupClosed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PopupOpened">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupRoot"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1.0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PopupClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupRoot"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid.Resources>
                            <ControlTemplate x:Key="PopupButtonTemplate"
                                             TargetType="ToggleButton">
                                <!-- clock icon -->
                                <Grid FlowDirection="LeftToRight"
                                      Height="20"
                                      Width="22"
                                      Background="Transparent">
                                    <vsm:VisualStateManager.VisualStateGroups>
                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                            <vsm:VisualStateGroup.Transitions>
                                                <vsm:VisualTransition GeneratedDuration="00:00:00.1000000" />
                                            </vsm:VisualStateGroup.Transitions>
                                            <vsm:VisualState x:Name="Normal" />
                                            <vsm:VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                   Storyboard.TargetName="ellipse"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                   Storyboard.TargetName="Highlight"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                   Storyboard.TargetName="ellipse"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                   Storyboard.TargetName="Highlight"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Disabled" />
                                        </vsm:VisualStateGroup>
                                        <vsm:VisualStateGroup x:Name="CheckStates">
                                            <vsm:VisualState x:Name="Checked">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                   Storyboard.TargetName="HighlightChecked"
                                                                                   Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Unchecked" />
                                        </vsm:VisualStateGroup>
                                        <vsm:VisualStateGroup x:Name="FocusStates">
                                            <vsm:VisualState x:Name="Focused"></vsm:VisualState>
                                            <vsm:VisualState x:Name="Unfocused" />
                                        </vsm:VisualStateGroup>
                                    </vsm:VisualStateManager.VisualStateGroups>
                                    <Grid Margin="0,0,2,0">
                                        <Path Fill="{x:Null}"
                                              Height="8.258"
                                              Margin="9,6,5,0"
                                              VerticalAlignment="Top"
                                              Stretch="Fill"
                                              Data="M10.108397,6.5404582 L10.108397,10.415268 L13.538931,13.738435"
                                              HorizontalAlignment="Left"
                                              Stroke="{DynamicResource Theme_BorderBrush}" />
                                        <Ellipse Margin="0"
                                                 Stroke="{DynamicResource Theme_BorderBrush}"
                                                 StrokeThickness="2"
                                                 x:Name="ellipse" />
                                        <Ellipse Margin="0"
                                                 Stroke="{TemplateBinding BorderBrush}"
                                                 StrokeThickness="2"
                                                 x:Name="Highlight"
                                                 Visibility="Collapsed" />
                                        <Ellipse Margin="0"
                                                 Stroke="{TemplateBinding BorderBrush}"
                                                 StrokeThickness="2"
                                                 x:Name="HighlightChecked"
                                                 Visibility="Collapsed" />

                                        <!-- disabled visual -->
                                        <Rectangle x:Name="DisabledVisualElement"
                                                   IsHitTestVisible="false"
                                                   Opacity="0"
                                                   Fill="#FFFFFFFF"
                                                   RadiusX="3"
                                                   RadiusY="3" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- Value is being synched in code, because of inability to do TwoWay TemplateBinding -->
                        <inputToolkit:TimeUpDown x:Name="TimeUpDown"
                                                 Height="{TemplateBinding Height}"
                                                 Background="{TemplateBinding Background}"
                                                 BorderBrush="{TemplateBinding BorderBrush}"
                                                 BorderThickness="{TemplateBinding BorderThickness}"
                                                 Padding="{TemplateBinding Padding}"
                                                 Grid.ColumnSpan="2"
                                                 Style="{TemplateBinding TimeUpDownStyle}"
                                                 SpinnerStyle="{TemplateBinding SpinnerStyle}"
                                                 Minimum="{TemplateBinding Minimum}"
                                                 Maximum="{TemplateBinding Maximum}"
                                                 TimeParsers="{TemplateBinding TimeParsers}"
                                                 Format="{TemplateBinding Format}"
                                                 Culture="{TemplateBinding Culture}"
                                                 TimeGlobalizationInfo="{TemplateBinding TimeGlobalizationInfo}"
                                                 Grid.Column="0" />
                        <ToggleButton x:Name="DropDownToggle"
                                      Template="{StaticResource PopupButtonTemplate}"
                                      Margin="3,0,7,0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Grid.Column="1"
                                      BorderBrush="{TemplateBinding BorderBrush}" />
                        <!-- Value is being synched in code, because of inability to do TwoWay TemplateBinding -->
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupRoot"
                                    BorderBrush="{DynamicResource Theme_BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                <ContentControl x:Name="PopupPlaceHolder"
                                                IsTabStop="False"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch" />
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="inputToolkit:TimePicker"
           BasedOn="{StaticResource FlatTimePickerStyle}" />

    <Style x:Name="FlatTimeUpDownStyle"
           TargetType="TimeUpDown">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="MinWidth"
                Value="125" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,4,4,4" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:TimeUpDown">
                    <Grid x:Name="Root"
                       TextOptions.TextHintingMode="Fixed">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <!-- common states -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DropDownToggle"
                            Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                       Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                            <!-- focus states -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!-- Popup states -->
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"
                                                   To="PopupOpened" />
                                    <VisualTransition GeneratedDuration="0:0:0.2"
                                                   To="PopupClosed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PopupOpened">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupRoot"
                                                      Storyboard.TargetProperty="Opacity"
                                                      To="1.0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PopupClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupRoot"
                                                      Storyboard.TargetProperty="Opacity"
                                                      To="0.0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid.Resources>
                            <ControlTemplate x:Key="PopupButtonTemplate"
                                          TargetType="ToggleButton">
                                <!-- clock icon -->
                                <Grid FlowDirection="LeftToRight"
                                   Height="20"
                                   Width="22"
                                   Background="Transparent">
                                    <vsm:VisualStateManager.VisualStateGroups>
                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                            <vsm:VisualStateGroup.Transitions>
                                                <vsm:VisualTransition GeneratedDuration="00:00:00.1000000" />
                                            </vsm:VisualStateGroup.Transitions>
                                            <vsm:VisualState x:Name="Normal" />
                                            <vsm:VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                Storyboard.TargetName="ellipse"
                                                                                Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                             Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                Storyboard.TargetName="Highlight"
                                                                                Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                             Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                Storyboard.TargetName="ellipse"
                                                                                Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                             Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                Storyboard.TargetName="Highlight"
                                                                                Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                             Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Disabled" />
                                        </vsm:VisualStateGroup>
                                        <vsm:VisualStateGroup x:Name="CheckStates">
                                            <vsm:VisualState x:Name="Checked">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00.001"
                                                                                Storyboard.TargetName="HighlightChecked"
                                                                                Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                             Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Unchecked" />
                                        </vsm:VisualStateGroup>
                                        <vsm:VisualStateGroup x:Name="FocusStates">
                                            <vsm:VisualState x:Name="Focused"></vsm:VisualState>
                                            <vsm:VisualState x:Name="Unfocused" />
                                        </vsm:VisualStateGroup>
                                    </vsm:VisualStateManager.VisualStateGroups>
                                    <Grid Margin="0,0,2,0">
                                        <Path Fill="{x:Null}"
                                           Height="8.258"
                                           Margin="9,6,5,0"
                                           VerticalAlignment="Top"
                                           Stretch="Fill"
                                           Data="M10.108397,6.5404582 L10.108397,10.415268 L13.538931,13.738435"
                                           HorizontalAlignment="Left"
                                           Stroke="{DynamicResource Theme_BorderBrush}" />
                                        <Ellipse Margin="0"
                                              Stroke="{DynamicResource Theme_BorderBrush}"
                                              StrokeThickness="2"
                                              x:Name="ellipse" />
                                        <Ellipse Margin="0"
                                              Stroke="{TemplateBinding BorderBrush}"
                                              StrokeThickness="2"
                                              x:Name="Highlight"
                                              Visibility="Collapsed" />
                                        <Ellipse Margin="0"
                                              Stroke="{TemplateBinding BorderBrush}"
                                              StrokeThickness="2"
                                              x:Name="HighlightChecked"
                                              Visibility="Collapsed" />

                                        <!-- disabled visual -->
                                        <Rectangle x:Name="DisabledVisualElement"
                                                IsHitTestVisible="false"
                                                Opacity="0"
                                                Fill="#FFFFFFFF"
                                                RadiusX="3"
                                                RadiusY="3" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="TimeHintPopup"
                            IsOpen="True"
                            VerticalOffset="0">
                            <Border x:Name="TimeHintVisualElement"
                                 HorizontalAlignment="Stretch"
                                 IsHitTestVisible="True"
                                 Visibility="Collapsed"
                                 Background="Red"
                                 BorderBrush="Green"
                                 BorderThickness="1">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Grid>
                                    <ContentControl Content="{TemplateBinding TimeHintContent}"
                                                 TextOptions.TextHintingMode="Fixed"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 FontFamily="{TemplateBinding FontFamily}"
                                                 Foreground="{DynamicResource Theme_BorderBrush}"
                                                 HorizontalAlignment="Right"
                                                 VerticalAlignment="Center"
                                                 Margin="3"
                                                 IsTabStop="False"
                                                 IsHitTestVisible="False" />
                                </Grid>
                            </Border>
                        </Popup>
                        <Grid>
                            <TextBox x:Name="Text"
                                  Text="{TemplateBinding Value}"
                                  TextWrapping="NoWrap"
                                  TextAlignment="Left"
                                  Background="{DynamicResource Theme_ControlBackgroundBrush}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  FontFamily="{TemplateBinding FontFamily}"
                                  FontSize="{TemplateBinding FontSize}"
                                  FontStretch="{TemplateBinding FontStretch}"
                                  FontStyle="{TemplateBinding FontStyle}"
                                  FontWeight="{TemplateBinding FontWeight}"
                                  Foreground="{TemplateBinding Foreground}"
                                  Height="{TemplateBinding Height}"
                                  VerticalContentAlignment="Center"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  AcceptsReturn="False"
                                  Padding="4,0,32,0"
                                  >

                            </TextBox>
                            <ButtonSpinner x:Name="Spinner"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   Padding="{TemplateBinding Padding}"
                                   MinWidth="24"
                                   Margin="1,2"
                                   HorizontalContentAlignment="Stretch"
                                   VerticalContentAlignment="Stretch"
                                   IsTabStop="False"/>

                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                             Background="{DynamicResource Theme_DisabledBrush}"
                             Opacity="0"
                             Margin="1,2"
                             IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TimeUpDown"
           BasedOn="{StaticResource FlatTimeUpDownStyle}" />

    <Style  x:Key="FlatDomainUpDownStyle"
       TargetType="inputToolkit:DomainUpDown">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="MinWidth"
                Value="125" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,4,4,4" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:DomainUpDown">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <TextBox x:Name="Text"
                                  Text="{TemplateBinding Value}"
                                  TextWrapping="NoWrap"
                                  TextAlignment="Left"
                                  Background="{DynamicResource Theme_ControlBackgroundBrush}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  FontFamily="{TemplateBinding FontFamily}"
                                  FontSize="{TemplateBinding FontSize}"
                                  FontStretch="{TemplateBinding FontStretch}"
                                  FontStyle="{TemplateBinding FontStyle}"
                                  FontWeight="{TemplateBinding FontWeight}"
                                  Foreground="{TemplateBinding Foreground}"
                                  Height="{TemplateBinding Height}"
                                  VerticalContentAlignment="Center"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  AcceptsReturn="False"
                                  Padding="4,0,32,0"
                                  >

                            </TextBox>
                            <ButtonSpinner x:Name="Spinner"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   Padding="{TemplateBinding Padding}"
                                   MinWidth="23"
                                   Margin="1,2"
                                   HorizontalContentAlignment="Stretch"
                                   VerticalContentAlignment="Stretch"
                                   IsTabStop="False"/>
                        </Grid>

                        <Border x:Name="DisabledVisualElement"
                                IsHitTestVisible="false"
                                Opacity="0"
                                Background="{DynamicResource Theme_DisabledBrush}"
                                CornerRadius="2.5,2.5,2.5,2.5" />
                        <Border x:Name="FocusVisualElement"
                                IsHitTestVisible="False"
                                Opacity="0"
                                BorderBrush="{DynamicResource Theme_PrimaryBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DomainUpDown"
           BasedOn="{StaticResource FlatDomainUpDownStyle}" />

    <Style x:Key="FlatNumericUpDownStyle"
        TargetType="controls:NumericUpDown">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="MinWidth"
                Value="125" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,4,4,4" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:NumericUpDown">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement"
                                                                       Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <TextBox x:Name="Text"
                                  Text="{TemplateBinding Value}"
                                  TextWrapping="NoWrap"
                                  TextAlignment="Right"
                                  Background="{DynamicResource Theme_ControlBackgroundBrush}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  FontFamily="{TemplateBinding FontFamily}"
                                  FontSize="{TemplateBinding FontSize}"
                                  FontStretch="{TemplateBinding FontStretch}"
                                  FontStyle="{TemplateBinding FontStyle}"
                                  FontWeight="{TemplateBinding FontWeight}"
                                  Foreground="{TemplateBinding Foreground}"
                                  Height="{TemplateBinding Height}"
                                  VerticalContentAlignment="Center"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  AcceptsReturn="False"
                                  Padding="4,0,32,0"
                                  >

                            </TextBox>
                            <ButtonSpinner x:Name="Spinner"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   Padding="{TemplateBinding Padding}"
                                   MinWidth="24"
                                   Margin="1,2"
                                   HorizontalContentAlignment="Stretch"
                                   VerticalContentAlignment="Stretch"
                                   IsTabStop="False"/>

                        </Grid>

                        <Border x:Name="DisabledVisualElement"
                                IsHitTestVisible="false"
                                Opacity="0"
                                Background="#A5FFFFFF"
                                CornerRadius="2.5,2.5,2.5,2.5" />
                        <Border x:Name="FocusVisualElement"
                                IsHitTestVisible="False"
                                Opacity="0"
                                BorderBrush="#FF45D6FA"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1,1,1,1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="NumericUpDown"
    BasedOn="{StaticResource FlatNumericUpDownStyle}" />

    <!-- ButtonSpinner -->
    <Style x:Key="FlatButtonSpinnerStyle"
           TargetType="inputToolkit:ButtonSpinner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="inputToolkit:ButtonSpinner">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <RepeatButton x:Name="IncreaseButton"
                                      Grid.Column="1"
                                      Width="24"
                                      VerticalAlignment="Stretch"
                                      HorizontalAlignment="Center"
                                      IsTabStop="False"
                                      Margin="0,0,1,0.5"
                                      BorderThickness="1"
                                      ClickMode="Press">
                            <Path Fill="{DynamicResource Theme_TextOnPrimaryBrush}"
                                  Height="8"
                                  Width="8"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Bottom"
                                  Data="M0,8 L8,8 L4,4 Z" />
                        </RepeatButton>

                        <ContentPresenter Grid.RowSpan="2"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />

                        <RepeatButton x:Name="DecreaseButton"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Width="24"
                                      VerticalAlignment="Stretch"
                                      HorizontalAlignment="Center"
                                      IsTabStop="False"
                                      Margin="0,0.5,1,0"
                                      BorderThickness="1"
                                      ClickMode="Press">
                            <Path Fill="{DynamicResource Theme_TextOnPrimaryBrush}"
                                  Height="8"
                                  Width="8"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Top"
                                  Data="M0,0 L8,0 L4,4 Z" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ButtonSpinner"
           BasedOn="{StaticResource FlatButtonSpinnerStyle}" />

</ResourceDictionary>
