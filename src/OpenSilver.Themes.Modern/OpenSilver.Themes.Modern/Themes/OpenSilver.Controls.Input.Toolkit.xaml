<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="http://opensilver.net/themes/modern">

    <!-- ListTimePickerPopup Style -->
    <Style TargetType="ListTimePickerPopup">
        <Setter Property="PopupMinutesInterval"
                Value="30" />
        <Setter Property="PopupSecondsInterval"
                Value="0" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListTimePickerPopup">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContainedByPickerStates">
                                <VisualState x:Name="Contained" />
                                <VisualState x:Name="NotContained" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PopupModeStates">
                                <VisualState x:Name="AllowSecondsAndDesignatorsSelection" />
                                <VisualState x:Name="AllowTimeDesignatorsSelection" />
                                <VisualState x:Name="AllowSecondsSelection" />
                                <VisualState x:Name="HoursAndMinutesOnly" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ListBox x:Name="ListBox"
                                 Style="{TemplateBinding ListBoxStyle}"
                                 ItemContainerStyle="{TemplateBinding ListBoxItemStyle}"
                                 IsTabStop="True"
                                 TabIndex="1"
                                 MaxHeight="130"
                                 DisplayMemberPath="Key"
                                 DataContext="{TemplateBinding TimeItemsSelection}"
                                 ItemsSource="{Binding Items}"
                                 SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TimePicker -->
    <Style x:Name="FlatTimePickerStyle" 
           TargetType="TimePicker">
        <Setter Property="Height"
                Value="32" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="MinWidth"
                Value="150" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,2,2,2" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="PopupTemplate">
            <Setter.Value>
                <TimePickerPopupTemplate>
                    <ListTimePickerPopup />
                </TimePickerPopupTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TimePicker">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <!-- common states -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                            <!-- focus states -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!-- Popup states -->
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualState x:Name="PopupOpened">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupRoot"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1.0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PopupClosed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupRoot"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.Resources>
                            <ControlTemplate x:Key="PopupButtonTemplate"
                                             TargetType="ToggleButton">
                                <!-- clock icon -->
                                <Grid x:Name="Root"
                                      FlowDirection="LeftToRight"
                                      Height="20"
                                      Width="20"
                                      Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                   Storyboard.TargetName="ellipse"
                                                                                   Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                   Storyboard.TargetName="Highlight"
                                                                                   Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                   Storyboard.TargetName="ellipse"
                                                                                   Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                   Storyboard.TargetName="Highlight"
                                                                                   Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root"
                                                                                   Storyboard.TargetProperty="Opacity">
                                                        <SplineDoubleKeyFrame KeyTime="0"
                                                                              Value=".55" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                   Storyboard.TargetName="HighlightChecked"
                                                                                   Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0"
                                                                                Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unchecked" />
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused" />
                                            <VisualState x:Name="Unfocused" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Path Fill="{x:Null}"
                                          Height="8.258"
                                          Margin="9,6,5,0"
                                          VerticalAlignment="Top"
                                          Stretch="Fill"
                                          Data="M10.108397,6.5404582 L10.108397,10.415268 L13.538931,13.738435"
                                          HorizontalAlignment="Left"
                                          Stroke="{DynamicResource Theme_BorderBrush}" />
                                    <Ellipse Margin="0"
                                             Stroke="{DynamicResource Theme_BorderBrush}"
                                             StrokeThickness="2"
                                             x:Name="ellipse" />
                                    <Ellipse Margin="0"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="2"
                                             x:Name="Highlight"
                                             Visibility="Collapsed" />
                                    <Ellipse Margin="0"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="2"
                                             x:Name="HighlightChecked"
                                             Visibility="Collapsed" />
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TimeUpDown x:Name="TimeUpDown"
                                    Height="Auto"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    Style="{TemplateBinding TimeUpDownStyle}"
                                    SpinnerStyle="{TemplateBinding SpinnerStyle}"
                                    Minimum="{TemplateBinding Minimum}"
                                    Maximum="{TemplateBinding Maximum}"
                                    TimeParsers="{TemplateBinding TimeParsers}"
                                    Format="{TemplateBinding Format}"
                                    Culture="{TemplateBinding Culture}"
                                    TimeGlobalizationInfo="{TemplateBinding TimeGlobalizationInfo}"
                                    Grid.Column="0" />

                        <ToggleButton x:Name="DropDownToggle"
                                      Template="{StaticResource PopupButtonTemplate}"
                                      Margin="3,0,7,0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Grid.Column="1"
                                      BorderBrush="{TemplateBinding BorderBrush}" />

                        <!-- Value is being synched in code, because of inability to do TwoWay TemplateBinding -->
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupRoot"
                                    BorderBrush="{DynamicResource Theme_BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                <ContentControl x:Name="PopupPlaceHolder"
                                                IsTabStop="False"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Stretch" />
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TimePicker"
           BasedOn="{StaticResource FlatTimePickerStyle}" />

    <Style x:Name="FlatTimeUpDownStyle"
           TargetType="TimeUpDown">
        <Setter Property="Height"
                Value="32" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="MinWidth"
                Value="125" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,2,2,2" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TimeUpDown">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <!-- common states -->
                            <VisualStateGroup x:Name="CommonStates">
                                <!-- all contained elements are controls that will take care of visualizing the disabled state themselves -->
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                            <!-- focus states -->
                            <VisualStateGroup x:Name="FocusStates">
                                <!-- all contained elements are controls that will take care of visualizing the focus state themselves -->
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!-- TimeHintStates -->
                            <VisualStateGroup x:Name="TimeHintStates">
                                <VisualState x:Name="TimeHintOpenedUp">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintPopup"
                                                                       Storyboard.TargetProperty="Placement">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Top" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimeHintOpenedDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintPopup"
                                                                       Storyboard.TargetProperty="Placement">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Bottom" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TimeHintClosed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeHintVisualElement"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!-- ParsingStates -->
                            <VisualStateGroup x:Name="ParsingStates">
                                <VisualState x:Name="ValidTime" />
                                <VisualState x:Name="InvalidTime">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="invalidicon"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="EmptyTime" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Popup x:Name="TimeHintPopup"
                               Placement="Top"
                               PlacementTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Border x:Name="TimeHintVisualElement"
                                    IsHitTestVisible="True"
                                    Visibility="Collapsed"
                                    Background="{DynamicResource Theme_ControlBackgroundBrush}"
                                    BorderBrush="{DynamicResource Theme_BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="21" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter Content="{TemplateBinding TimeHintContent}"
                                                      TextElement.Foreground="{DynamicResource Theme_TextBrush}"
                                                      TextElement.FontSize="10"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      IsHitTestVisible="False"
                                                      Margin="3,3,0,3" />

                                    <ContentPresenter x:Name="invalidicon"
                                                      Grid.Column="1"
                                                      Visibility="Collapsed"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      IsHitTestVisible="False">
                                        <Path Fill="#FFCC00"
                                              Height="15"
                                              Width="15"
                                              Stretch="Fill"
                                              Data="M512,64 A448,448 0 1,1 512,960 A448,448 0 0,1 512,64 Z M512,256 A58.432,58.432 0 0,0 453.76,319.744 L477.12,576.128 A35.072,35.072 0 0,0 546.88,576.128 L570.176,319.744 A58.432,58.432 0 0,0 512,256 Z M512,768 A51.2,51.2 0 1,0 512,665.6 A51.2,51.2 0 0,0 512,768 Z" />
                                    </ContentPresenter>
                                </Grid>
                            </Border>
                        </Popup>
                        
                        <ButtonSpinner x:Name="Spinner"
                                       Background="{TemplateBinding Background}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       Style="{TemplateBinding SpinnerStyle}"
                                       MinWidth="24"
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       IsTabStop="False">
                            <TextBox x:Name="Text"
                                     Text="{TemplateBinding Value}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     FontStretch="{TemplateBinding FontStretch}"
                                     FontStyle="{TemplateBinding FontStyle}"
                                     FontWeight="{TemplateBinding FontWeight}"
                                     Foreground="{TemplateBinding Foreground}"
                                     VerticalAlignment="Center"
                                     TextWrapping="NoWrap"
                                     TextAlignment="Right"
                                     AcceptsReturn="False"
                                     Height="Auto">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <ScrollViewer x:Name="ContentElement"
                                                                  Padding="0"
                                                                  BorderThickness="0" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </ButtonSpinner>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TimeUpDown"
           BasedOn="{StaticResource FlatTimeUpDownStyle}" />

    <Style x:Key="FlatDomainUpDownStyle"
           TargetType="DomainUpDown">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="MinWidth"
                Value="125" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,2,2,2" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DomainUpDown">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="MouseOver">
                                    <!-- composite controls will visualize mouseover state -->
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <!-- composite controls will visualize disabled state -->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <!-- composite controls will gain focus and visualize it -->
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <!-- composite controls will gain focus and visualize it -->
                                </VisualState>
                            </VisualStateGroup>
                            <!-- interaction mode states -->
                            <VisualStateGroup x:Name="InteractionModeStates">
                                <VisualState x:Name="Edit">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Text"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Visualization"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Display" />
                            </VisualStateGroup>
                            <!-- input valid states -->
                            <VisualStateGroup x:Name="DomainStates">
                                <VisualState x:Name="ValidDomain" />
                                <VisualState x:Name="InvalidDomain">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ErrorVisualElement"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ButtonSpinner x:Name="Spinner"
                                       Background="{TemplateBinding Background}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       Style="{TemplateBinding SpinnerStyle}"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       IsTabStop="False">
                            <Grid>
                                <ContentPresenter x:Name="Visualization"
                                                  Margin="0"
                                                  Opacity="1"
                                                  IsHitTestVisible="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Value}"
                                                  ContentTemplate="{TemplateBinding ItemTemplate}"
                                                  TextElement.FontFamily="{TemplateBinding FontFamily}"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontStretch="{TemplateBinding FontStretch}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />
                                <TextBox x:Name="Text"
                                         Opacity="0"
                                         Margin="0"
                                         Padding="0"
                                         IsTabStop="True"
                                         Height="Auto"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         FontSize="{TemplateBinding FontSize}"
                                         FontStretch="{TemplateBinding FontStretch}"
                                         FontStyle="{TemplateBinding FontStyle}"
                                         FontWeight="{TemplateBinding FontWeight}"
                                         Foreground="{TemplateBinding Foreground}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         AcceptsReturn="False"
                                         IsHitTestVisible="False"
                                         TextWrapping="NoWrap">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox">
                                            <ScrollViewer x:Name="ContentElement"
                                                          Padding="0"
                                                          BorderThickness="0" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                            </Grid>
                        </ButtonSpinner>
                        <Border x:Name="ErrorVisualElement"
                                CornerRadius="6"
                                Visibility="Collapsed"
                                Margin="-2"
                                IsHitTestVisible="False"
                                BorderBrush="{DynamicResource Theme_ErrorBrush}"
                                BorderThickness="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="DomainUpDown"
           BasedOn="{StaticResource FlatDomainUpDownStyle}" />

    <Style x:Key="FlatNumericUpDownStyle"
           TargetType="NumericUpDown">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="32" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="8,2,2,2" />
        <Setter Property="Foreground"
                Value="{DynamicResource Theme_TextBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NumericUpDown">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ButtonSpinner x:Name="Spinner"
                                       Background="{TemplateBinding Background}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       MinWidth="35"
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       IsTabStop="False">
                            <TextBox x:Name="Text"
                                     Text="{TemplateBinding Value}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     FontStretch="{TemplateBinding FontStretch}"
                                     FontStyle="{TemplateBinding FontStyle}"
                                     FontWeight="{TemplateBinding FontWeight}"
                                     Foreground="{TemplateBinding Foreground}"
                                     MinWidth="25"
                                     VerticalAlignment="Center"
                                     TextWrapping="NoWrap"
                                     TextAlignment="Right"
                                     AcceptsReturn="False"
                                     Height="Auto">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <ScrollViewer x:Name="ContentElement"
                                                                  Padding="0"
                                                                  BorderThickness="0" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </ButtonSpinner>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="NumericUpDown"
           BasedOn="{StaticResource FlatNumericUpDownStyle}" />

    <!-- ButtonSpinner -->
    <Style x:Key="FlatButtonSpinnerStyle"
           TargetType="ButtonSpinner">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonSpinner">
                    <Grid x:Name="RootElement">
                        <Grid.Resources>
                            <local:ColorInterpolator x:Key="DisabledBorderBuilder"
                                                     BasedOn="{TemplateBinding BorderBrush}"
                                                     TargetColor="{DynamicResource Theme_BackgroundColor}"
                                                     DesaturationRatio="{DynamicResource Theme_DisabledDesaturationRatio}"
                                                     InterpolationRatio="{DynamicResource Theme_DisabledInterpolationRatio}" />
                            <local:ColorInterpolator x:Key="DisabledForegroundBuilder"
                                                     BasedOn="{TemplateBinding Foreground}"
                                                     TargetColor="{DynamicResource Theme_BackgroundColor}"
                                                     DesaturationRatio="{DynamicResource Theme_DisabledDesaturationRatio}"
                                                     InterpolationRatio="{DynamicResource Theme_DisabledInterpolationRatio}" />

                            <SolidColorBrush x:Key="DisabledBorderBrush"
                                             Color="{Binding Source={StaticResource DisabledBorderBuilder}, Path=ResultColor}" />
                            <SolidColorBrush x:Key="DisabledForegroundBrush"
                                             Color="{Binding Source={StaticResource DisabledForegroundBuilder}, Path=ResultColor}" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="BorderColor"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderColor"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource DisabledBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                                                       Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource DisabledForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="HasFocus"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!-- Increase states -->
                            <VisualStateGroup x:Name="IncreaseStates">
                                <VisualState x:Name="IncreaseEnabled" />
                                <VisualState x:Name="IncreaseDisabled" />
                            </VisualStateGroup>
                            <!-- Decrease states-->
                            <VisualStateGroup x:Name="DecreaseStates">
                                <VisualState x:Name="DecreaseEnabled" />
                                <VisualState x:Name="DecreaseDisabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                CornerRadius="4"
                                BorderBrush="{DynamicResource Theme_BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Border x:Name="BorderColor"
                                CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="Transparent"
                                Opacity="0" />
                        <Border x:Name="HasFocus"
                                CornerRadius="4"
                                IsHitTestVisible="False"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Visibility="Collapsed">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0"
                                                  Color="{Binding ElementName=HasFocus, Path=BorderBrush.(SolidColorBrush.Color)}"
                                                  Opacity="1"
                                                  BlurRadius="2" />
                            </Border.Effect>
                        </Border>

                        <Border Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.RowSpan="2"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{x:Null}"
                                                  ContentTemplateSelector="{x:Null}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <RepeatButton x:Name="IncreaseButton"
                                              Grid.Row="0"
                                              Grid.Column="2"
                                              Width="24"
                                              IsTabStop="False"
                                              Margin="0,0,1,0.5"
                                              ClickMode="Press">
                                    <Path Fill="{DynamicResource Theme_TextOnPrimaryBrush}"
                                          Height="4"
                                          Width="8"
                                          Data="M0,4 L8,4 L4,0 Z" />
                                </RepeatButton>
                                <RepeatButton x:Name="DecreaseButton"
                                              Grid.Row="1"
                                              Grid.Column="2"
                                              Width="24"
                                              IsTabStop="False"
                                              Margin="0,0.5,1,0"
                                              ClickMode="Press">
                                    <Path Fill="{DynamicResource Theme_TextOnPrimaryBrush}"
                                          Height="4"
                                          Width="8"
                                          Data="M0,0 L8,0 L4,4 Z" />
                                </RepeatButton>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ButtonSpinner"
           BasedOn="{StaticResource FlatButtonSpinnerStyle}" />

    <!--  controls:Rating  -->
    <Style TargetType="Rating">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground" 
                Value="{DynamicResource Theme_PrimaryBrush}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Margin="0,0,-6,0"  />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Rating">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.03" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="Transparent"
                                BorderThickness="0">
                            <ItemsPresenter />
                        </Border>
                        <Border x:Name="ReadOnlyVisualElement"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Background="Transparent"
                                BorderBrush="{DynamicResource Theme_BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="DisabledVisualElement"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Background="{TemplateBinding BorderBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="FocusVisualElement"
                                   StrokeThickness="1"
                                   RadiusX="1"
                                   RadiusY="1"
                                   IsHitTestVisible="false"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  controls:RatingItem  -->
    <Style TargetType="RatingItem">
        <Setter Property="BorderBrush"
                Value="{DynamicResource Theme_BorderBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource Theme_BackgroundBrush}" />
        <Setter Property="Margin" 
                Value="1,0,1,0" />
        <Setter Property="Cursor" 
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RatingItem">
                    <ControlTemplate.Resources>
                        <Style x:Key="StarPathStyle"
                               TargetType="Path">
                            <Setter Property="Data"
                                    Value="M26.285,2.486l5.407,10.956c0.376,0.762,1.103,1.29,1.944,1.412l12.091,1.757  c2.118,0.308,2.963,2.91,1.431,4.403l-8.749,8.528c-0.608,0.593-0.886,1.448-0.742,2.285l2.065,12.042  c0.362,2.109-1.852,3.717-3.746,2.722l-10.814-5.685c-0.752-0.395-1.651-0.395-2.403,0l-10.814,5.685  c-1.894,0.996-4.108-0.613-3.746-2.722l2.065-12.042c0.144-0.837-0.134-1.692-0.742-2.285l-8.749-8.528  c-1.532-1.494-0.687-4.096,1.431-4.403l12.091-1.757c0.841-0.122,1.568-0.65,1.944-1.412l5.407-10.956  C22.602,0.567,25.338,0.567,26.285,2.486z" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid Width="20">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.2000000" />
                                    <VisualTransition From="MouseOver"
                                                      GeneratedDuration="00:00:00.2000000"
                                                      To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="MouseOverRatingItem"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="MouseOverHighlight"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.325" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="PressedRatingItem"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.39" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="DisabledRatingItem"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="DisabledRatingItemBackground"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Duration="00:00:00"
                                                                      Storyboard.TargetName="clipper"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="{DynamicResource Theme_BorderColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="ReadOnlyRatingItem"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1000000" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FillStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1000000" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Empty" />
                                <VisualState x:Name="Partial" />
                                <VisualState x:Name="Filled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Path x:Name="DefaultRatingItem"
                              Fill="Transparent"
                              Stretch="Fill"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeLineJoin="Round"
                              StrokeThickness="0.6"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Opacity="1"
                              UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"/>
                        <LinearClipper RatioVisible="{TemplateBinding DisplayValue}"
                                                  ExpandDirection="Right">
                            <Path 
                                  x:Name="clipper"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Fill"
                                  Stroke="{x:Null}"
                                  StrokeLineJoin="Round"
                                  VerticalAlignment="Stretch"
                                  Opacity="1"
                                  UseLayoutRounding="False"
                                  Style="{StaticResource StarPathStyle}"/>
                        </LinearClipper>
                        <Path x:Name="MouseOverRatingItem"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Fill"
                              Stroke="{x:Null}"
                              StrokeLineJoin="Round"
                              VerticalAlignment="Stretch"
                              Opacity="0"
                              UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"/>
                        <Path x:Name="MouseOverHighlight"
                              Fill="Transparent"
                              Stretch="Fill"
                              Stroke="{x:Null}"
                              StrokeLineJoin="Round"
                              VerticalAlignment="Stretch"
                              Opacity="0"
                              UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"/>
                        <Path x:Name="PressedRatingItem"
                              Stretch="Fill"
                              Stroke="{x:Null}"
                              StrokeLineJoin="Round"
                              VerticalAlignment="Stretch"
                              UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"
                              Fill="{TemplateBinding BorderBrush}"
                              Opacity="0" />
                        <Path x:Name="FocusRatingItem"
                              Stretch="Fill"
                              Stroke="{TemplateBinding Foreground}"
                              StrokeLineJoin="Round"
                              StrokeThickness="0.1"
                              VerticalAlignment="Stretch"
                              Opacity="0"
                              UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"/>
                        <Path x:Name="ReadOnlyRatingItem"
                              Fill="Transparent"
                              Stretch="Fill"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeLineJoin="Round"
                              StrokeThickness="0"
                              VerticalAlignment="Stretch"
                              UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"
                              IsHitTestVisible="False"
                              Opacity="0" />
                        <Path x:Name="DisabledRatingItemBackground"
                              Stretch="Fill"
                              Stroke="{x:Null}"
                              StrokeLineJoin="Round"
                              VerticalAlignment="Stretch"
                              UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"
                              Fill="Transparent"
                              Opacity="0" />
                        <LinearClipper x:Name="DisabledRatingItem"
                                                  RatioVisible="{TemplateBinding DisplayValue}"
                                                  ExpandDirection="Right"
                                                  Opacity="0">
                            <Path Stretch="Fill"
                                  Stroke="{x:Null}"
                                  StrokeLineJoin="Round"
                                  VerticalAlignment="Stretch"
                                  Opacity="1"
                                  UseLayoutRounding="False"
                              Style="{StaticResource StarPathStyle}"
                              Fill="{DynamicResource Theme_BorderBrush}" />
                        </LinearClipper>
                        <ContentPresenter x:Name="Content"
                                          Cursor="{TemplateBinding Cursor}"
                                          HorizontalAlignment="Left"
                                          Margin="{TemplateBinding Padding}"
                                          Grid.RowSpan="2"
                                          Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
